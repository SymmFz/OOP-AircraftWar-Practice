@startuml
'https://plantuml.com/class-diagram

scale 4

!pragma sveglimit 65536

abstract class AbstractGame
{
    # mobEnemyFactory:EnemyAircraftFactory
    # eliteEnemyFactory:EnemyAircraftFactory
    # elitePlusEnemyFactory:EnemyAircraftFactory
    # bossEnemyFactory:EnemyAircraftFactory
    - heroAircraft:HeroAircraft
    - enemyAircrafts:List<EnemyAircraft>
}

AbstractGame ..> EnemyAircraft
AbstractGame ..> EnemyAircraftFactory


interface EnemyAircraftFactory
{
    + {abstract} createEnemyAircraft():EnemyAircraft
}

class MobEnemyFactory
{
    + createEnemyAircraft():EnemyAircraft
}

class EliteEnemyFactory
{
    + createEnemyAircraft():EnemyAircraft
}

class BossEnemyFactory
{
    + createEnemyAircraft():EnemyAircraft
}

class ElitePlusEnemyFactory
{
    + createEnemyAircraft():EnemyAircraft
}

EnemyAircraftFactory <|.. MobEnemyFactory
EnemyAircraftFactory <|.. EliteEnemyFactory
EnemyAircraftFactory <|.. BossEnemyFactory
EnemyAircraftFactory <|.. ElitePlusEnemyFactory

MobEnemyFactory ..> MobEnemy
EliteEnemyFactory ..> EliteEnemy
BossEnemyFactory ..> BossEnemy
ElitePlusEnemyFactory ..> ElitePlusEnemy

abstract class EnemyAircraft implements BombObserver {
    # itemDropChance:double
    # maxItemNum:int
    - {static} HEALING_ITEM_WEIGHT: int = 70 {readOnly}
    - {static} FIRE_POWER_UP_WEIGHT: int = 50 {readOnly}
    - {static} BOMB_ITEM_WEIGHT: int = 40 {readOnly}
    - {static} FIRE_POWER_UP_PLUS_WEIGHT: int = 30 {readOnly}
    - {static} DARTS_ITEM_WEIGHT: int = 20 {readOnly}
    - {static} TOTAL_WEIGHT: int = HEALING_ITEM_WEIGHT + FIRE_POWER_UP_WEIGHT + \n\
                             BOMB_ITEM_WEIGHT + FIRE_POWER_UP_PLUS_WEIGHT + DARTS_ITEM_WEIGHT {readOnly}
    - {field} {static} RANDOM_INSTANCE: Random = new Random() {readOnly}
    + EnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp, \n\
                    int direction, int shootNum, int power, ShootStrategy shootStrategy, \n\
                    double itemDropChance, int maxItemNum)
    + dropItems():List<BaseItem>
    + {abstract} getScoreNum():int
    + {abstract} updateOnBombExplosion():void
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp, \n\
               int direction, int shootNum, int power, ShootStrategy shootStrategy, \n\
               double itemDropChance, int maxItemNum)
    + forward():void
    + getScoreNum():int
    + updateOnBombExplosion():void
}

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp, \n\
                 int direction, int shootNum, int power, ShootStrategy shootStrategy, \n\
                 double itemDropChance, int maxItemNum)
    + forward():void
    + getScoreNum():int
    + updateOnBombExplosion():void
}


class BossEnemy {
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp, \n\
                int direction, int shootNum, int power, ShootStrategy shootStrategy, \n\
                double itemDropChance, int maxItemNum)
    + forward():void
    + getScoreNum():int
    + updateOnBombExplosion():void
}

class ElitePlusEnemy {
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp, \n\
                     int direction, int shootNum, int power, ShootStrategy shootStrategy, \n\
                     double itemDropChance, int maxItemNum)
    + forward():void
    + getScoreNum():int
    + updateOnBombExplosion():void
}

EnemyAircraft <|-- MobEnemy
EnemyAircraft <|-- EliteEnemy
EnemyAircraft <|-- BossEnemy
EnemyAircraft <|-- ElitePlusEnemy

@enduml
