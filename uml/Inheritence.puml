@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + increaseHp(int increase):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }


class HeroAircraft {
    - heroAircraft:HeroAircraft
    - shootNum:int
    - power:int
    - direction:int
    - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + {static} getInstance():HeroAircraft
    + forward():void
    + shoot():List<BaseBullet>
}


AbstractAircraft <|-- HeroAircraft

abstract class EnemyAircraft {
    + EnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + {abstract} dropItems():List<BaseItem>
}

AbstractAircraft <|-- EnemyAircraft

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + dropItems():List<BaseItem>
}

class EliteEnemy {
    - shootNum:int
    - power:int
    - direction:int
    - {static} ITEM_DROP_CHANCE:double
    - {static} HEALING_ITEM_WEIGHT:int
    - {static} FIRE_POWER_UP_WEIGHT:int
    - {static} BOMB_ITEM_WEIGHT:int
    - {static} TOTAL_WEIGHT:int
    - {static} random:Random
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + dropItems():List<BaseItem>
}


class BossEnemy {
    - shootNum:int
    - power:int
    - direction:int
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + dropItems():List<BaseItem>
}

EnemyAircraft <|-- MobEnemy
EnemyAircraft <|-- EliteEnemy
EnemyAircraft <|-- BossEnemy

abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

abstract class BaseItem {
    + BaseItem(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + {abstract} active(HeroAircraft, List<EnemyAircraft>, List<BaseBullet>):void
}

class HealingItem {
    - healingAmount:int
    + HealingItem(int locationX, int locationY, int speedX, int speedY)
    + active(HeroAircraft, List<EnemyAircraft>, List<BaseBullet>):void
}

class FirePowerUpItem {
    - firePowerUpAmount:int
    + HealingItem(int locationX, int locationY, int speedX, int speedY)
    + active(HeroAircraft, List<EnemyAircraft>, List<BaseBullet>):void
}

class BombItem {
    + BombItem(int locationX, int locationY, int speedX, int speedY)
    + active(HeroAircraft, List<EnemyAircraft>, List<BaseBullet>):void
}


BaseItem <|-- HealingItem
BaseItem <|-- FirePowerUpItem
BaseItem <|-- BombItem

AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- BaseItem

@enduml